{"version":3,"sources":["components/todoList/item/item.module.css","components/todoList/todoList.module.css","components/todoList/todoListMedia.module.css","components/todoList/item/Item.jsx","components/todoList/addItemForm/addItemForm.jsx","components/todoList/todoList.jsx","redux/todoReducer.js","components/todoList/todoListContainer.jsx","App.js","reportWebVitals.js","redux/store.js","index.js","components/todoList/item/itemMedia.module.css","components/todoList/addItemForm/addItemForm.module.css","components/todoList/addItemForm/addItemFormMedia.module.css"],"names":["module","exports","Item","item","deleteItem","completeItem","filterType","className","cn","styles","itemBody","media","isCompleted","itemDone","itemUndone","itemCompleted","itemTime","currentDate","itemInner","itemText","buttonHolder","button","buttonCancel","onClick","id","AddNewItem","addItem","validationSchema","yup","shape","required","max","initialValues","validateOnBlur","onSubmit","values","resetForm","errors","touched","handleChange","handleBlur","handleSubmit","isValid","dirty","form","input","type","name","onChange","onBlur","value","placeholder","disabled","TodoList","items","completeAllItem","useState","filtersVisible","setFiltersVisible","hideFilters","setFilterType","todoBody","title","length","filterButton","filters","filter","itemsReplace","itemsList","map","i","completeAll","GET_ITEMS","ADD_ITEM","DELETE_ITEM","COMPLETE_ITEM","COMPLETE_ALL_ITEMS","initialState","todoReducer","state","action","newItemsArray","localStorage","resultString","JSON","parse","getItem","String","push","itemsArray","months","days","now","Date","formatDate","date","currentHours","getHours","currentMinutes","getMinutes","currentSeconds","getSeconds","newDate","getFullYear","getMonth","getDay","setItem","stringify","itemsDeleteArray","itemId","clear","itemsCompleteArray","TodoListContainer","this","props","getItems","React","Component","compose","connect","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,SAAW,uBAAuB,KAAO,mBAAmB,SAAW,uBAAuB,UAAY,wBAAwB,cAAgB,4BAA4B,aAAe,2BAA2B,OAAS,qBAAqB,aAAe,2BAA2B,SAAW,uBAAuB,WAAa,2B,mBCAjWD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,cAAgB,gCAAgC,aAAe,+BAA+B,QAAU,0BAA0B,OAAS,yBAAyB,aAAe,+BAA+B,UAAY,4BAA4B,YAAc,gC,mBCAhWD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,MAAQ,6BAA6B,UAAY,iCAAiC,aAAe,oCAAoC,QAAU,+BAA+B,OAAS,8BAA8B,aAAe,oCAAoC,YAAc,qC,uMCsCpUC,EA/BF,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,WAE3C,OAEI,cADA,CACA,OAAKC,UAAWC,IAAGC,IAAOC,SAAUC,IAAMD,SACZ,SAAVJ,IAA0BH,EAAKS,aAAeH,IAAOI,UAAYF,IAAME,SAC9D,WAAVP,GAA2BH,EAAKS,aAAeH,IAAOK,YAAcH,IAAMG,YAF7F,UAII,sBAAKP,UAAWC,IAAGC,IAAON,KAAMQ,IAAMR,KAAMA,EAAKS,aAAeH,IAAOM,eAAvE,UACI,mBAAGR,UAAWE,IAAOO,SAArB,SAAgCb,EAAKc,cACrC,mBAAGV,UAAWE,IAAOS,UAArB,SAAiCf,EAAKgB,cAI1C,sBAAKZ,UAAWC,IAAGC,IAAOW,aAAcT,IAAMS,cAA9C,UACI,wBAAQb,UAAWC,IAAGC,IAAOY,OAAQV,IAAMU,OAAQlB,EAAKS,aAAeH,IAAOa,cACtEC,QAAS,WAAQlB,EAAaF,EAAKqB,KAD3C,SAEKrB,EAAKS,YAAc,cAAC,IAAD,IAAoB,cAAC,IAAD,MAE5C,wBAAQL,UAAWC,IAAGC,IAAOY,OAAQV,IAAMU,QACnCE,QAAU,WACNnB,EAAWD,EAAKqB,KAF5B,SAII,cAAC,IAAD,a,kDCqBLC,EA7CI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEXC,EAAmBC,MAAaC,MAAM,CACxCV,SAAUS,MAAaE,SAAb,uBAA6CC,IAAI,IAAjD,+BAGd,OACI,8BACI,cAAC,IAAD,CACIC,cAAe,CACXb,SAAU,IAEdc,gBAAc,EACdC,SAAa,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,UACnBV,EAAQS,EAAOhB,UACfiB,EAAU,CAACD,OAAO,MAEtBR,iBAAkBA,EATtB,SAWM,gBAAGQ,EAAH,EAAGA,OAAQE,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,WAAYC,EAAtD,EAAsDA,aACrDC,EADD,EACCA,QAASC,EADV,EACUA,MADV,OAEE,sBAAKpC,UAAWC,IAAGC,IAAOmC,KAAMjC,IAAMiC,MAAtC,UACI,uBACIrC,UAAWC,IAAGC,IAAOoC,MAAOlC,IAAMkC,OAClCC,KAAO,OACPC,KAAO,WACPC,SAAUT,EACVU,OAAQT,EACRU,MAAOf,EAAOhB,SACdgC,YAAY,uBAEfb,EAAQnB,UAAYkB,EAAOlB,UAC5B,8BAAMkB,EAAOlB,WAEb,wBAAQZ,UAAWC,IAAGC,IAAOY,OAAQV,IAAMU,QACnC+B,UAAWV,IAAYC,EACvBpB,QAASkB,EACTK,KAAM,SAHd,0B,kCC4CTO,EA9EE,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,MAAO5B,EAAwD,EAAxDA,QAAStB,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,aAAckD,EAAqB,EAArBA,gBAGzD,EAA4CC,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAIMC,EAAc,WAChBD,GAAkB,IAItB,EAAoCF,mBAAS,OAA7C,mBAAOlD,EAAP,KAAmBsD,EAAnB,KAeI,OAAO,sBAAKrD,UAAWC,IAAGC,IAAOoD,SAAUlD,IAAMkD,UAA1C,UACH,oBAAItD,UAAWC,IAAGC,IAAOqD,MAAOnD,IAAMmD,OAAtC,6BACA,cAAC,EAAD,CAAYpC,QAASA,IAIjB4B,EAAMS,OAAS,IAAMN,GACrB,wBAAQlD,UAAWC,IAAGC,IAAOuD,aAAcrD,IAAMqD,cACzCzC,QA/BA,WAChBmC,GAAkB,IA6BV,qBAMAJ,EAAMS,OAAS,GAAKN,GACpB,sBAAKlD,UAAWC,IAAGC,IAAOwD,QAAStD,IAAMsD,SAAzC,UACI,wBAAQ1D,UAAWC,IAAGC,IAAOyD,OAAQvD,IAAMuD,QACnC3C,QA9BJ,WAChBqC,EAAc,OACdD,KA2BY,iBAEA,wBAAQpD,UAAWC,IAAGC,IAAOyD,OAAQvD,IAAMuD,QACnC3C,QA5BH,WACjBqC,EAAc,QACdD,KAyBY,kBAEA,wBAAQpD,UAAWC,IAAGC,IAAOyD,OAAQvD,IAAMuD,QACnC3C,QA1BD,WACnBqC,EAAc,UACdD,KAuBY,uBAOa,IAAjBL,EAAMS,OACA,oBAAIxD,UAAWC,IAAGC,IAAO0D,aAAcxD,IAAMwD,cAA7C,+EAEA,qBAAK5D,UAAWC,IAAGC,IAAO2D,UAAWzD,IAAMyD,WAA3C,SAEMd,EAAMe,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CACMnE,KAAMmE,EACNlE,WAAYA,EACZC,aAAcA,EACdC,WAAYA,GAJPgE,EAAE9C,SAYxC8B,EAAMS,OAAS,GACf,wBAAQxD,UAAWC,IAAGC,IAAO8D,YAAa5D,IAAM4D,aACxChD,QAASgC,EADjB,8B,wBC9EViB,EAAS,iBACTC,EAAQ,gBACRC,EAAW,mBACXC,EAAa,qBACbC,EAAkB,0BAGlBC,EAAe,CACjBvB,MAAO,IAuIIwB,EApIK,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAClD,OAAQA,EAAOlC,MACX,KAAK0B,EAGD,IADA,IAAMS,EAAgB,GACbX,EAAI,EAAGA,GAAKY,aAAanB,OAAQO,IAAK,CAC3C,IAAMa,EAAeC,KAAKC,MAAMH,aAAaI,QAAQC,OAAOjB,KAC5DW,EAAcO,KACV,CAAChE,GAAI2D,EAAa,GACdhE,SAAUgE,EAAa,GACvBvE,YAAauE,EAAa,GAC1BlE,YAAakE,EAAa,KAGtC,OAAO,2BAEAJ,GAFP,IAGIzB,MAAO2B,IAEf,KAAKR,EACD,IAAMgB,EAAU,YAAOV,EAAMzB,OAEvBoC,EAAS,CAAC,MAAD,mEACTC,EAAO,CAAC,MAAD,qCACPC,EAAM,IAAIC,KAGVC,EAAa,SAACC,GAChB,OAAGR,OAAOQ,GAAMhC,QAAU,EAAS,IAAN,OAAWwB,OAAOQ,IACxCR,OAAOQ,IAEZC,EAAeF,EAAWF,EAAIK,YAC9BC,EAAiBJ,EAAWF,EAAIO,cAChCC,EAAiBN,EAAWF,EAAIS,cAGhCC,EAAO,UAAMV,EAAIW,cAAV,cAA6Bb,EAAOE,EAAIY,YAAxC,cAAyDb,EAAKC,EAAIa,SAAW,GAA7E,4BACTT,EADS,YACOE,EADP,YACyBE,GAStC,OAPAlB,aAAawB,QAAb,UAAwBjB,EAAW1B,OAAS,GACxCqB,KAAKuB,UACD,CAAClB,EAAW1B,OAAS,EACrBiB,EAAO7D,UACP,EACAmF,KAED,2BAEAvB,GAFP,IAGIzB,MAAM,GAAD,mBAAMyB,EAAMzB,OAAZ,CAAmB,CAAC9B,GAAIiE,EAAW1B,OAAS,EAC7C5C,SAAU6D,EAAO7D,SACjBP,aAAa,EACbK,YAAaqF,OAGzB,KAAK5B,EAGD,IAFA,IAAIkC,EAAmB,GAEdtC,EAAI,EAAGA,GAAKY,aAAanB,OAAQO,IAAI,CAC1C,IAAMa,EAAeC,KAAKC,MAAMH,aAAaI,QAAQC,OAAOjB,KACzDa,EAAa,KAAOH,EAAO6B,QAC1BD,EAAiBpB,KAAK,CAAChE,GAAIoF,EAAiB7C,OAAS,EACjD5C,SAAUgE,EAAa,GACvBvE,YAAauE,EAAa,GAC1BlE,YAAakE,EAAa,KAItCD,aAAa4B,QAEb,IAAK,IAAIxC,EAAI,EAAGA,GAAKsC,EAAiB7C,OAAS,EAAGO,IAC9CY,aAAawB,QAAb,UAAwBE,EAAiBtC,GAAG9C,IACxC4D,KAAKuB,UAAU,CAACC,EAAiBtC,GAAG9C,GAChCoF,EAAiBtC,GAAGnD,SACpByF,EAAiBtC,GAAG1D,YACpBgG,EAAiBtC,GAAGrD,eAEhC,OAAO,2BAEA8D,GAFP,IAGIzB,MAAOsD,IAEf,KAAKjC,EAED,IAAK,IAAIL,EAAI,EAAGA,GAAKY,aAAanB,OAAQO,IAAI,CAC1C,IAAMa,EAAeC,KAAKC,MAAMH,aAAaI,QAAQC,OAAOjB,KACzDa,EAAa,KAAOH,EAAO6B,UACH,IAApB1B,EAAa,GACZD,aAAawB,QAAb,UAAwBvB,EAAa,IACjCC,KAAKuB,UACD,CAACxB,EAAa,GACdA,EAAa,IACb,EACAA,EAAa,OAEK,IAApBA,EAAa,IACnBD,aAAawB,QAAb,UAAwBvB,EAAa,IACjCC,KAAKuB,UACD,CAACxB,EAAa,GACdA,EAAa,IACb,EACAA,EAAa,OAMjC,IADA,IAAI4B,EAAkB,YAAOhC,EAAMzB,OAC1BgB,EAAI,EAAGA,GAAKS,EAAMzB,MAAMS,OAAS,EAAGO,IACtCyC,EAAmBzC,GAAG9C,KAAOwD,EAAO6B,SACnCE,EAAmBzC,GAAG1D,aACsB,IAAtCmG,EAAmBzC,GAAG1D,aAIpC,OAAO,2BAEAmE,GAFP,IAGIzB,MAAM,YAAKyB,EAAMzB,SAEzB,KAAKsB,EAGD,OADAM,aAAa4B,QACN,2BAEA/B,GAFP,IAGIzB,MAAO,KAEf,QACI,OAAOyB,ICrIbiC,E,uKACF,WACIC,KAAKC,MAAMC,a,oBAGf,WACI,OAAO,cAAC,EAAD,2BAAcF,KAAKC,OAAnB,IACUxF,QAASuF,KAAKC,MAAMxF,QACpBtB,WAAY6G,KAAKC,MAAM9G,WACvBC,aAAc4G,KAAKC,MAAM7G,aACzBkD,gBAAiB0D,KAAKC,MAAM3D,uB,GAVrB6D,IAAMC,WAoBvBC,cACXC,aAPoB,SAACxC,GACrB,MAAO,CACHzB,MAAOyB,EAAMyC,KAAKlE,SAKG,CAAC6D,SDwHN,iBAClB,CAAErE,KAAM0B,ICzH0B9C,QD2HjB,SAACP,GAAD,MACjB,CAAE2B,KAAM2B,EAAUtD,aC5HyBf,WD8HvB,SAACyG,GAAD,MACpB,CAAE/D,KAAM4B,EAAamC,WC/HkCxG,aDiIjC,SAACwG,GAAD,MACtB,CAAE/D,KAAM6B,EAAekC,WClI8CtD,gBDoI5C,iBACzB,CAAET,KAAM8B,MCtIC0C,CAEbN,GCpBaS,EAJH,WACV,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJRQ,EAAWC,YAAgB,CAC7BZ,KAAM1C,IAIJuD,EAAQC,YAAYH,GAEXE,IAEfE,OAAOF,MAAQA,ECJfG,IAASC,OACL,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,MACSK,SAASC,eAAe,SAGzCjB,K,mBCbA1H,EAAOC,QAAU,CAAC,SAAW,4BAA4B,KAAO,wBAAwB,aAAe,gCAAgC,OAAS,0BAA0B,SAAW,4BAA4B,WAAa,gC,mBCA9ND,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,mBCA/FD,EAAOC,QAAU,CAAC,KAAO,+BAA+B,MAAQ,gCAAgC,OAAS,mC","file":"static/js/main.e51481c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemBody\":\"item_itemBody__1GFYn\",\"item\":\"item_item__3WCyd\",\"itemTime\":\"item_itemTime__fwEXz\",\"itemInner\":\"item_itemInner__SfE-6\",\"itemCompleted\":\"item_itemCompleted__39tWU\",\"buttonHolder\":\"item_buttonHolder___LPx5\",\"button\":\"item_button__3Irk0\",\"buttonCancel\":\"item_buttonCancel__3OaGb\",\"itemDone\":\"item_itemDone__2HtJ3\",\"itemUndone\":\"item_itemUndone__1n3wF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoBody\":\"todoList_todoBody__1IlaL\",\"title\":\"todoList_title__XfVZH\",\"filterSection\":\"todoList_filterSection__2rcq2\",\"filterButton\":\"todoList_filterButton__3TqyC\",\"filters\":\"todoList_filters__x14Vr\",\"filter\":\"todoList_filter__1Aor8\",\"itemsReplace\":\"todoList_itemsReplace__3wFAj\",\"itemsList\":\"todoList_itemsList__3QujR\",\"completeAll\":\"todoList_completeAll__1KzuG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoBody\":\"todoListMedia_todoBody__3HUDQ\",\"title\":\"todoListMedia_title__2-BG0\",\"itemsList\":\"todoListMedia_itemsList__3nk7e\",\"filterButton\":\"todoListMedia_filterButton__1d5Y1\",\"filters\":\"todoListMedia_filters__uRqLl\",\"filter\":\"todoListMedia_filter__YUrn4\",\"itemsReplace\":\"todoListMedia_itemsReplace__cH1kC\",\"completeAll\":\"todoListMedia_completeAll__2z5qk\"};","import React from \"react\";\r\nimport styles from './item.module.css'\r\nimport media from './itemMedia.module.css'\r\nimport cn from 'classnames'\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { AiOutlineCheck } from 'react-icons/ai';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nconst Item = ({item, deleteItem, completeItem, filterType}) => {\r\n\r\n    return (\r\n        // Filters show chosen elements with adding/deleting needed css style\r\n        <div className={cn(styles.itemBody, media.itemBody,\r\n                            filterType === `done` && !item.isCompleted && styles.itemDone && media.itemDone,\r\n                           filterType === `undone` && item.isCompleted && styles.itemUndone && media.itemUndone)\r\n        }>\r\n            <div className={cn(styles.item, media.item, item.isCompleted && styles.itemCompleted)}>\r\n                <p className={styles.itemTime}>{item.currentDate}</p>\r\n                <p className={styles.itemInner}>{item.itemText}</p>\r\n            </div>\r\n\r\n\r\n            <div className={cn(styles.buttonHolder, media.buttonHolder)}>\r\n                <button className={cn(styles.button, media.button, item.isCompleted && styles.buttonCancel)}\r\n                        onClick={() => { completeItem(item.id) }}>\r\n                    {item.isCompleted ? <AiOutlineClose/> : <AiOutlineCheck/>}\r\n                </button>\r\n                <button className={cn(styles.button, media.button)}\r\n                        onClick={ () => {\r\n                            deleteItem(item.id)\r\n                        }}>\r\n                    <AiFillDelete/>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport styles from './addItemForm.module.css'\r\nimport media from './addItemFormMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\n\r\nconst AddNewItem = ({addItem}) => {\r\n\r\n    const validationSchema = yup.object().shape({\r\n        itemText: yup.string().required(`Goal can't be empty`).max(300, `Max length is 300 symbols`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    itemText: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit = { (values, {resetForm}) =>{\r\n                    addItem(values.itemText)\r\n                    resetForm({values: ``})\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({ values, errors, touched, handleChange, handleBlur, handleSubmit,\r\n                   isValid, dirty}) => (\r\n                    <div className={cn(styles.form, media.form)}>\r\n                        <input\r\n                            className={cn(styles.input, media.input)}\r\n                            type = 'text'\r\n                            name = 'itemText'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.itemText}\r\n                            placeholder='Add a goal here...'/>\r\n\r\n                        {touched.itemText && errors.itemText &&\r\n                        <div>{errors.itemText}</div>}\r\n\r\n                        <button className={cn(styles.button, media.button)}\r\n                                disabled={!isValid && !dirty}\r\n                                onClick={handleSubmit}\r\n                                type={'submit'}>Add</button>\r\n                    </div>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewItem","import React, {useState} from \"react\";\r\nimport Item from \"./item/Item\";\r\nimport AddNewItem from \"./addItemForm/addItemForm\";\r\nimport styles from './todoList.module.css'\r\nimport media from './todoListMedia.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst TodoList = ({items, addItem, deleteItem, completeItem, completeAllItem}) => {\r\n\r\n    //Setting visibility of filters button\r\n    const [filtersVisible, setFiltersVisible] = useState(false)\r\n    const showFilters = () => {\r\n        setFiltersVisible(true)\r\n    }\r\n    const hideFilters = () => {\r\n        setFiltersVisible(false)\r\n    }\r\n\r\n    //Setting filter type for items\r\n    const [filterType, setFilterType] = useState(`all`)\r\n    const seeAllItems = () => {\r\n        setFilterType(`all`)\r\n        hideFilters()\r\n    }\r\n    const seeDoneItems = () => {\r\n        setFilterType(`done`)\r\n        hideFilters()\r\n    }\r\n    const seeUndoneItems = () => {\r\n        setFilterType(`undone`)\r\n        hideFilters()\r\n    }\r\n\r\n\r\n        return <div className={cn(styles.todoBody, media.todoBody)}>\r\n            <h2 className={cn(styles.title, media.title)}>Plan for today:</h2>\r\n            <AddNewItem addItem={addItem}/>\r\n\r\n            {/*Button shows only when filtersVisible = false and items array exists*/}\r\n            {\r\n                items.length > 0 && !filtersVisible &&\r\n                <button className={cn(styles.filterButton, media.filterButton)}\r\n                        onClick={showFilters}>Filters</button>\r\n            }\r\n\r\n            {/*Filters show only when filtersVisible = true and items array exists*/}\r\n            {\r\n                items.length > 0 && filtersVisible &&\r\n                <div className={cn(styles.filters, media.filters)}>\r\n                    <button className={cn(styles.filter, media.filter)}\r\n                            onClick={seeAllItems} >All</button>\r\n                    <button className={cn(styles.filter, media.filter)}\r\n                            onClick={seeDoneItems} >Done</button>\r\n                    <button className={cn(styles.filter, media.filter)}\r\n                            onClick={seeUndoneItems} >Undone</button>\r\n                </div>\r\n            }\r\n\r\n            {/*Items array shows only when exists*/}\r\n            {\r\n                items.length === 0\r\n                    ? <h3 className={cn(styles.itemsReplace, media.itemsReplace)}>Add your daily goals here to\r\n                        be shure you won't forget something </h3>\r\n                    : <div className={cn(styles.itemsList, media.itemsList)}>\r\n                        {\r\n                            items.map(i => <Item key={i.id}\r\n                                                 item={i}\r\n                                                 deleteItem={deleteItem}\r\n                                                 completeItem={completeItem}\r\n                                                 filterType={filterType}/>)\r\n                        }\r\n                    </div>\r\n            }\r\n\r\n\r\n            {/*CompleteAll button show only items array exists*/}\r\n            {\r\n                items.length > 0 &&\r\n                <button className={cn(styles.completeAll, media.completeAll)}\r\n                        onClick={completeAllItem}>Complete all</button>\r\n            }\r\n\r\n        </div>\r\n}\r\n\r\nexport default TodoList","const GET_ITEMS = `todo/GET_ITEMS`\r\nconst ADD_ITEM = `todo/ADD_ITEM`\r\nconst DELETE_ITEM = `todo/DELETE_ITEM`\r\nconst COMPLETE_ITEM = `todo/COMPLETE_ITEM`\r\nconst COMPLETE_ALL_ITEMS = `todo/COMPLETE_ALL_ITEMS`\r\n\r\n\r\nconst initialState = {\r\n    items: [],\r\n}\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ITEMS:\r\n            //Getting items from localStorage\r\n            const newItemsArray = []\r\n            for (let i = 1; i <= localStorage.length; i ++){\r\n                const resultString = JSON.parse(localStorage.getItem(String(i)))\r\n                newItemsArray.push(\r\n                    {id: resultString[0],\r\n                        itemText: resultString[1],\r\n                        isCompleted: resultString[2],\r\n                        currentDate: resultString[3]}\r\n                )\r\n            }\r\n            return {\r\n                //Setting items to UI\r\n                ...state,\r\n                items: newItemsArray\r\n            }\r\n        case ADD_ITEM:\r\n            const itemsArray = [...state.items]\r\n            //Getting date when item was added\r\n            const months = [`Jan`,`Feb`,`Mar`,`Apr`,`May`,`Jun`,`Jul`,`Aug`,`Sep`,`Oct`,`Nov`,`Dec`]\r\n            const days = [`Mon`,`Tue`,`Wed`,`Thu`,`Fri`,`Sat`,`Sun`]\r\n            const now = new Date()\r\n\r\n            //Formatting date\r\n            const formatDate = (date) => {\r\n                if(String(date).length <= 1) return `0${String(date)}`\r\n                return String(date)\r\n            }\r\n            const currentHours = formatDate(now.getHours())\r\n            const currentMinutes = formatDate(now.getMinutes())\r\n            const currentSeconds = formatDate(now.getSeconds())\r\n\r\n            //Setting date\r\n            const newDate = `${now.getFullYear()} / ${months[now.getMonth()]} / ${days[now.getDay() - 1]} \r\n            / ${currentHours}:${currentMinutes}:${currentSeconds}`\r\n            //Setting new item to localStorage\r\n            localStorage.setItem(`${itemsArray.length + 1}`,\r\n                JSON.stringify(\r\n                    [itemsArray.length + 1,\r\n                    action.itemText,\r\n                    false,\r\n                    newDate])\r\n                )\r\n            return {\r\n                //Adding items to UI\r\n                ...state,\r\n                items: [...state.items, {id: itemsArray.length + 1,\r\n                    itemText: action.itemText,\r\n                    isCompleted :false,\r\n                    currentDate: newDate\r\n                }],\r\n            }\r\n        case DELETE_ITEM:\r\n            let itemsDeleteArray = []\r\n            //Getting items from localStorage\r\n            for (let i = 1; i <= localStorage.length; i++){\r\n                const resultString = JSON.parse(localStorage.getItem(String(i)))\r\n                if(resultString[0] !== action.itemId){\r\n                    itemsDeleteArray.push({id: itemsDeleteArray.length + 1,\r\n                        itemText: resultString[1],\r\n                        isCompleted: resultString[2],\r\n                        currentDate: resultString[3]})\r\n                }\r\n            }\r\n            //Clearing localStorage\r\n            localStorage.clear()\r\n            //Setting items again (this is needed for correct items id)\r\n            for (let i = 0; i <= itemsDeleteArray.length - 1; i++){\r\n                localStorage.setItem(`${itemsDeleteArray[i].id}`,\r\n                    JSON.stringify([itemsDeleteArray[i].id,\r\n                        itemsDeleteArray[i].itemText,\r\n                        itemsDeleteArray[i].isCompleted,\r\n                        itemsDeleteArray[i].currentDate]))\r\n            }\r\n            return {\r\n                //Setting items to UI\r\n                ...state,\r\n                items: itemsDeleteArray,\r\n            }\r\n        case COMPLETE_ITEM:\r\n            //Getting items from localStorage and rewriting them with conditions\r\n            for (let i = 1; i <= localStorage.length; i++){\r\n                const resultString = JSON.parse(localStorage.getItem(String(i)))\r\n                if(resultString[0] === action.itemId){\r\n                    if(resultString[2] === false){\r\n                        localStorage.setItem(`${resultString[0]}`,\r\n                            JSON.stringify(\r\n                                [resultString[0],\r\n                                resultString[1],\r\n                                true,\r\n                                resultString[3]])\r\n                        )\r\n                    } else if(resultString[2] === true){\r\n                        localStorage.setItem(`${resultString[0]}`,\r\n                            JSON.stringify(\r\n                                [resultString[0],\r\n                                resultString[1],\r\n                                false,\r\n                                resultString[3]])\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n            let itemsCompleteArray = [...state.items]\r\n            for (let i = 0; i <= state.items.length - 1; i++) {\r\n                if(itemsCompleteArray[i].id === action.itemId){\r\n                    itemsCompleteArray[i].isCompleted = true\r\n                        ? itemsCompleteArray[i].isCompleted === false\r\n                        : itemsCompleteArray[i].isCompleted === true\r\n                }\r\n            }\r\n            return {\r\n                //Setting items to UI\r\n                ...state,\r\n                items: [...state.items]\r\n            }\r\n        case COMPLETE_ALL_ITEMS:\r\n            //Clearing localStorage\r\n            localStorage.clear()\r\n            return {\r\n                //Setting items to UI\r\n                ...state,\r\n                items: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todoReducer\r\n\r\n\r\n//Action creators\r\nexport const getItems = () =>\r\n    ( { type: GET_ITEMS } )\r\n\r\nexport const addItem = (itemText) =>\r\n    ( { type: ADD_ITEM, itemText} )\r\n\r\nexport const deleteItem = (itemId) =>\r\n    ( { type: DELETE_ITEM, itemId } )\r\n\r\nexport const completeItem = (itemId) =>\r\n    ( { type: COMPLETE_ITEM, itemId } )\r\n\r\nexport const completeAllItem = () =>\r\n    ( { type: COMPLETE_ALL_ITEMS } )\r\n\r\n","import TodoList from \"./todoList\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {addItem, completeAllItem, completeItem, deleteItem, getItems} from \"../../redux/todoReducer\";\r\n\r\nclass TodoListContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.getItems()\r\n    }\r\n\r\n    render() {\r\n        return <TodoList {...this.props}\r\n                         addItem={this.props.addItem}\r\n                         deleteItem={this.props.deleteItem}\r\n                         completeItem={this.props.completeItem}\r\n                         completeAllItem={this.props.completeAllItem}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.todo.items,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getItems, addItem, deleteItem, completeItem, completeAllItem})\r\n)(TodoListContainer)","import './App.css';\r\nimport React from \"react\";\r\nimport TodoListContainer from \"./components/todoList/todoListContainer\";\r\n\r\nconst App = () => {\r\n  return <TodoListContainer />\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    todo: todoReducer,\r\n})\r\n\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemBody\":\"itemMedia_itemBody__1P2M9\",\"item\":\"itemMedia_item__1W3dv\",\"buttonHolder\":\"itemMedia_buttonHolder__xGTvj\",\"button\":\"itemMedia_button__3xxOI\",\"itemDone\":\"itemMedia_itemDone__229ig\",\"itemUndone\":\"itemMedia_itemUndone__1c9fx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"addItemForm_form__1vwv_\",\"input\":\"addItemForm_input__3G10G\",\"button\":\"addItemForm_button__2q_na\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"addItemFormMedia_form__1rNKW\",\"input\":\"addItemFormMedia_input__1pmoS\",\"button\":\"addItemFormMedia_button__yavoG\"};"],"sourceRoot":""}