{"version":3,"sources":["components/todoList/item/item.module.css","components/todoList/todoList.module.css","components/todoList/item/Item.jsx","utils/formHelpers/validators.js","utils/formHelpers/formControls.jsx","components/todoList/addItemForm/addItemForm.jsx","components/todoList/todoList.jsx","redux/todoReducer.js","components/todoList/todoListContainer.jsx","App.js","reportWebVitals.js","redux/store.js","index.js","components/todoList/addItemForm/addItemForm.module.css"],"names":["module","exports","Item","item","deleteItem","completeItem","filterType","className","cn","styles","itemBody","isCompleted","itemDone","itemCompleted","itemTime","currentDate","itemInner","itemText","buttonHolder","button","buttonCancel","onClick","id","required","value","maxLength","length","Input","input","meta","props","hasError","touched","error","AddNewItem","items","addItem","AddItemFormRedux","onSubmit","formValues","dispatch","now","Date","newDate","getMonth","getDay","getHours","getMinutes","getSeconds","localStorage","setItem","JSON","stringify","reset","reduxForm","form","handleSubmit","Field","component","type","placeholder","name","validate","TodoList","completeAllItem","useState","setFilterType","whatToShow","setWhatToShow","todoBody","title","filterSection","filterButton","filters","filter","itemsReplace","itemsList","map","i","completeAll","GET_ITEMS","ADD_ITEM","DELETE_ITEM","COMPLETE_ITEM","COMPLETE_ALL_ITEMS","initialState","todoReducer","state","action","storageArray","resultString","parse","getItem","String","push","newResultArray","itemId","clear","itemsArray","TodoListContainer","this","getItems","React","Component","compose","connect","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.429257bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemBody\":\"item_itemBody__3hAFk\",\"item\":\"item_item__sF3xA\",\"itemTime\":\"item_itemTime__1WokY\",\"itemInner\":\"item_itemInner__2IM2e\",\"itemCompleted\":\"item_itemCompleted__1aJiA\",\"buttonHolder\":\"item_buttonHolder__2nkg4\",\"button\":\"item_button__12YzU\",\"buttonCancel\":\"item_buttonCancel__3UmXS\",\"itemDone\":\"item_itemDone__2S202\",\"itemUndone\":\"item_itemUndone__1tw0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoBody\":\"todoList_todoBody__29Unn\",\"title\":\"todoList_title__1_WnU\",\"filterSection\":\"todoList_filterSection__s-Kul\",\"filterButton\":\"todoList_filterButton__hX1hT\",\"filters\":\"todoList_filters__2JSGU\",\"filter\":\"todoList_filter__ygjB4\",\"itemsReplace\":\"todoList_itemsReplace__1S0WE\",\"itemsList\":\"todoList_itemsList__2skke\",\"completeAll\":\"todoList_completeAll__2mIuY\"};","import React from \"react\";\r\nimport styles from './item.module.css'\r\nimport cn from 'classnames'\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { AiOutlineCheck } from 'react-icons/ai';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nconst Item = ({item, deleteItem, completeItem, filterType}) => {\r\n\r\n    return (\r\n        <div className={cn(styles.itemBody,\r\n                            filterType === `done` && !item.isCompleted && styles.itemDone,\r\n                           filterType === `undone` && item.isCompleted && styles.itemDone)\r\n        }>\r\n            <div className={cn(styles.item, item.isCompleted && styles.itemCompleted)}>\r\n                <p className={styles.itemTime}>{item.currentDate}</p>\r\n                <p className={styles.itemInner}>{item.itemText}</p>\r\n            </div>\r\n\r\n\r\n            <div className={styles.buttonHolder}>\r\n                <button className={cn(styles.button, item.isCompleted && styles.buttonCancel)}\r\n                        onClick={() => { completeItem(item.id) }}>\r\n                    {item.isCompleted ? <AiOutlineClose/> : <AiOutlineCheck/>}\r\n                </button>\r\n                <button className={styles.button}\r\n                        onClick={ () => {\r\n                            deleteItem(item.id)\r\n                        }}>\r\n                    <AiFillDelete/>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\n\r\n\r\n\r\n","export let required = (value) => {\r\n    if (!value) return `Goal can't be empty`\r\n    return undefined\r\n}\r\n\r\nexport let maxLength = (value) => {\r\n    if(value.length > 300) return `Max length is 300 symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\n\r\nlet Input = ({input, meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error\r\n    return <div>\r\n        <input {...input} {...props}/>\r\n        <div>\r\n            {\r\n                hasError && <div>{meta.error}</div>\r\n\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Input","import React from \"react\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport styles from './addItemForm.module.css'\r\nimport {maxLength, required} from \"../../../utils/formHelpers/validators\";\r\nimport Input from \"../../../utils/formHelpers/formControls\";\r\n\r\nconst AddNewItem = ({items, addItem}) => {\r\n\r\n    const onAddItem = (formValues, dispatch) => {\r\n\r\n        let months = [`Jan`,`Feb`,`Mar`,`Apr`,`May`,`Jun`,`Jul`,`Aug`,`Sep`,`Oct`,`Nov`,`Dec`]\r\n        let days = [`Mon`,`Tue`,`Wed`,`Thu`,`Fri`,`Sat`,`Sun`]\r\n\r\n        let now = new Date()\r\n\r\n        let newDate = `${months[now.getMonth()]} ${days[now.getDay()]} ${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}`\r\n        addItem(formValues.addItem, newDate)\r\n        localStorage.setItem(`${items.length + 1}`, JSON.stringify([items.length + 1, formValues.addItem, false, newDate]))\r\n        dispatch(reset(`addItemForm`))\r\n    }\r\n\r\n    return <AddItemFormRedux onSubmit={onAddItem}/>\r\n}\r\n\r\nexport default AddNewItem\r\n\r\nconst AddItemForm = ({handleSubmit}) => {\r\n    return <form className={styles.form} onSubmit={handleSubmit}>\r\n        <Field className={styles.input}\r\n               component={Input}\r\n               type='text'\r\n               placeholder='Add a goal here...'\r\n               name='addItem'\r\n               validate={[required, maxLength]}/>\r\n        <button className={styles.button}>Add</button>\r\n    </form>\r\n}\r\n\r\nconst AddItemFormRedux = reduxForm({\r\n    form: `addItemForm`\r\n})(AddItemForm)","import React, {useState} from \"react\";\r\nimport Item from \"./item/Item\";\r\nimport AddNewItem from \"./addItemForm/addItemForm\";\r\nimport styles from './todoList.module.css'\r\n\r\nconst TodoList = ({items, addItem, deleteItem, completeItem, completeAllItem}) => {\r\n\r\n    let [filterType, setFilterType] = useState(`all`)\r\n    let [whatToShow, setWhatToShow] = useState(`See`)\r\n\r\n    let seeFilters = () => {\r\n        whatToShow === `Hide`\r\n            ? setWhatToShow(`See`)\r\n            : setWhatToShow(`Hide`)\r\n    }\r\n\r\n        return <div className={styles.todoBody}>\r\n            <h2 className={styles.title}>Plan for today:</h2>\r\n            <AddNewItem addItem={addItem}\r\n                        items={items}/>\r\n            {\r\n                items.length > 0 &&\r\n                <div className={styles.filterSection}>\r\n                    <button className={styles.filterButton} onClick={seeFilters}>\r\n                        {whatToShow} filters\r\n                    </button>\r\n\r\n                    {\r\n                        whatToShow === `Hide` &&\r\n                        <div className={styles.filters}>\r\n                            <button className={styles.filter} onClick={ () =>\r\n                            {setFilterType(`all`)} } >All</button>\r\n                            <button className={styles.filter} onClick={ () =>\r\n                            {setFilterType(`done`)} } >Done</button>\r\n                            <button className={styles.filter} onClick={ () =>\r\n                            {setFilterType(`undone`)} } >Undone</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n            <div>\r\n                {\r\n                    items.length === 0\r\n                        ? <h3 className={styles.itemsReplace}>Add your daily goals here to\r\n                            be shure you won't forget something </h3>\r\n                        : <div className={styles.itemsList}>\r\n                            {\r\n                                items.map(i => <Item key={i.id}\r\n                                                     item={i}\r\n                                                     deleteItem={deleteItem}\r\n                                                     completeItem={completeItem}\r\n                                                     filterType={filterType}/>)\r\n                            }\r\n                        </div>\r\n                }\r\n            </div>\r\n            {\r\n                items.length > 0 &&\r\n                <button className={styles.completeAll} onClick={completeAllItem}>Complete all</button>\r\n            }\r\n\r\n        </div>\r\n}\r\n\r\nexport default TodoList","const GET_ITEMS = `todo/GET_ITEMS`\r\nconst ADD_ITEM = `todo/ADD_ITEM`\r\nconst DELETE_ITEM = `todo/DELETE_ITEM`\r\nconst COMPLETE_ITEM = `todo/COMPLETE_ITEM`\r\nconst COMPLETE_ALL_ITEMS = `todo/COMPLETE_ALL_ITEMS`\r\n\r\n\r\nconst initialState = {\r\n    items: [],\r\n}\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ITEMS:\r\n            let storageArray = [...state.items]\r\n            for (let i = 1; i <= localStorage.length; i ++){\r\n                let resultString = JSON.parse(localStorage.getItem(String(i)))\r\n                storageArray.push(\r\n                    {id: resultString[0], itemText: resultString[1],\r\n                        isCompleted: resultString[2],  currentDate: resultString[3]}\r\n                )\r\n            }\r\n            return {\r\n                ...state,\r\n                items: storageArray\r\n            }\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                items: [...state.items, {id: state.items.length + 1,\r\n                    itemText: action.itemText,\r\n                    isCompleted :false,\r\n                    currentDate: action.currentDate\r\n                }],\r\n            }\r\n        case DELETE_ITEM:\r\n            let newResultArray = []\r\n            for (let i = 1; i <= localStorage.length; i++){\r\n                let resultString = JSON.parse(localStorage.getItem(String(i)))\r\n                if(resultString[0] !== action.itemId){\r\n                    newResultArray.push({id: newResultArray.length + 1, itemText: resultString[1],\r\n                        isCompleted: resultString[2],  currentDate: resultString[3]})\r\n                                    }\r\n            }\r\n            localStorage.clear()\r\n            for (let i = 0; i <= newResultArray.length - 1; i++){\r\n                localStorage.setItem(`${newResultArray[i].id}`, JSON.stringify([newResultArray[i].id, newResultArray[i].itemText, newResultArray[i].isCompleted, newResultArray[i].currentDate]))\r\n            }\r\n            return {\r\n                ...state,\r\n                items: newResultArray,\r\n            }\r\n        case COMPLETE_ITEM:\r\n            for (let i = 1; i <= localStorage.length; i++){\r\n                let resultString = JSON.parse(localStorage.getItem(String(i)))\r\n                if(resultString[0] === action.itemId){\r\n                    if(resultString[2] === false){\r\n                        localStorage.setItem(`${resultString[0]}`, JSON.stringify([resultString[0], resultString[1], true, resultString[3]]))\r\n                    } else if(resultString[2] === true){\r\n                        localStorage.setItem(`${resultString[0]}`, JSON.stringify([resultString[0], resultString[1], false, resultString[3]]))\r\n                    }\r\n                }\r\n            }\r\n            let itemsArray = [...state.items]\r\n            for (let i = 0; i <= state.items.length - 1; i++) {\r\n                if(itemsArray[i].id === action.itemId){\r\n                    itemsArray[i].isCompleted = true\r\n                        ? itemsArray[i].isCompleted === false\r\n                        : itemsArray[i].isCompleted === true\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                items: [...state.items]\r\n            }\r\n        case COMPLETE_ALL_ITEMS:\r\n            localStorage.clear()\r\n            return {\r\n                ...state,\r\n                items: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todoReducer\r\n\r\nexport const getItems = () => ( { type: GET_ITEMS } )\r\n\r\nexport const addItem = (itemText, currentDate) => ( { type: ADD_ITEM, itemText, currentDate} )\r\n\r\nexport const deleteItem = (itemId) => ( { type: DELETE_ITEM, itemId } )\r\n\r\nexport const completeItem = (itemId) => ( { type: COMPLETE_ITEM, itemId } )\r\n\r\nexport const completeAllItem = () => ( { type: COMPLETE_ALL_ITEMS } )\r\n\r\n","import TodoList from \"./todoList\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {addItem, completeAllItem, completeItem, deleteItem, getItems} from \"../../redux/todoReducer\";\r\n\r\nclass TodoListContainer extends React.Component{\r\n    componentDidMount() {\r\n        this.props.getItems()\r\n    }\r\n\r\n    render() {\r\n        return <TodoList {...this.props}\r\n                         addItem={this.props.addItem}\r\n                         deleteItem={this.props.deleteItem}\r\n                         completeItem={this.props.completeItem}\r\n                         completeAllItem={this.props.completeAllItem}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.todo.items,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getItems, addItem, deleteItem, completeItem, completeAllItem})\r\n)(TodoListContainer)","import './App.css';\r\nimport React from \"react\";\r\nimport TodoListContainer from \"./components/todoList/todoListContainer\";\r\n\r\nconst App = () => {\r\n  return <TodoListContainer />\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    todo: todoReducer,\r\n    form: formReducer,\r\n})\r\n\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"addItemForm_form__2EbeK\",\"input\":\"addItemForm_input__ppM32\",\"button\":\"addItemForm_button__1zjJS\"};"],"sourceRoot":""}