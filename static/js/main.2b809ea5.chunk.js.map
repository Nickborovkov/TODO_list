{"version":3,"sources":["components/todoList/item/itemMedia.module.css","helpers/localStorageHelpers.js","redux/todoReducer.js","components/todoList/item/Item.jsx","components/todoList/addItemForm/addItemForm.jsx","components/todoList/todoList.jsx","App.js","reportWebVitals.js","redux/store.js","index.js","components/todoList/addItemForm/addItemForm.module.css","components/todoList/addItemForm/addItemFormMedia.module.css","components/todoList/item/item.module.css","components/todoList/todoList.module.css","components/todoList/todoListMedia.module.css"],"names":["module","exports","getItemsFromLocalStorage","array","i","localStorage","length","resultString","JSON","parse","getItem","String","push","id","itemText","isCompleted","currentDate","getNewDate","now","Date","formatDate","date","currentHours","getHours","currentMinutes","getMinutes","currentSeconds","getSeconds","getFullYear","getMonth","getDay","addNewItemToLocalStorage","action","newDate","setItem","stringify","deleteItemFromLocalStorage","itemId","clear","completeSelectedItem","state","items","GET_ITEMS","ADD_ITEM","DELETE_ITEM","COMPLETE_ITEM","COMPLETE_ALL_ITEMS","initialState","todoReducer","type","newItemsArray","itemsArray","itemsDeleteArray","itemsCompleteArray","Item","item","filterType","dispatch","useDispatch","arrayForFilter","styles","itemDone","media","className","cn","itemBody","itemCompleted","itemTime","itemInner","buttonHolder","button","buttonCancel","onClick","AddNewItem","validationSchema","yup","shape","required","max","initialValues","validateOnBlur","onSubmit","values","resetForm","errors","touched","handleChange","handleBlur","handleSubmit","isValid","dirty","form","errorArea","input","name","onChange","onBlur","value","placeholder","disabled","TodoList","useSelector","todo","useEffect","useState","filtersVisible","setFiltersVisible","hideFilters","setFilterType","todoBody","title","filterButton","filters","filter","itemsReplace","itemsList","map","completeAll","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,SAAW,4BAA4B,KAAO,wBAAwB,aAAe,gCAAgC,OAAS,0BAA0B,SAAW,4BAA4B,WAAa,gC,yKCDnNC,EAA2B,SAACC,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKC,aAAaC,OAAQF,IAAK,CAC3C,IAAMG,EAAeC,KAAKC,MAAMJ,aAAaK,QAAQC,OAAOP,KAC5DD,EAAMS,KACF,CACIC,GAAIN,EAAa,GACjBO,SAAUP,EAAa,GACvBQ,YAAaR,EAAa,GAC1BS,YAAaT,EAAa,OAO7BU,EAAa,WAEtB,IAEMC,EAAM,IAAIC,KAGVC,EAAa,SAACC,GAChB,OAAIV,OAAOU,GAAMf,QAAU,EAAS,IAAN,OAAWK,OAAOU,IACzCV,OAAOU,IAEZC,EAAeF,EAAWF,EAAIK,YAC9BC,EAAiBJ,EAAWF,EAAIO,cAChCC,EAAiBN,EAAWF,EAAIS,cAMtC,MAHa,UAAMT,EAAIU,cAAV,cAdE,CAAC,MAAD,mEAckCV,EAAIW,YAAxC,cAbA,CAAC,MAAD,qCAa8DX,EAAIY,SAAW,GAA7E,4BACDR,EADC,YACeE,EADf,YACiCE,IAOrCK,EAA2B,SAAC5B,EAAO6B,EAAQC,GAEpD5B,aAAa6B,QAAb,UAAwB/B,EAAMG,OAAS,GACnCE,KAAK2B,UACD,CAAChC,EAAMG,OAAS,EACZ0B,EAAOlB,UACP,EACAmB,MAKHG,EAA6B,SAACjC,EAAO6B,GAE9C,IAAK,IAAI5B,EAAI,EAAGA,GAAKC,aAAaC,OAAQF,IAAK,CAC3C,IAAMG,EAAeC,KAAKC,MAAMJ,aAAaK,QAAQC,OAAOP,KACxDG,EAAa,KAAOyB,EAAOK,QAC3BlC,EAAMS,KAAK,CACPC,GAAIV,EAAMG,OAAS,EACnBQ,SAAUP,EAAa,GACvBQ,YAAaR,EAAa,GAC1BS,YAAaT,EAAa,KAKtCF,aAAaiC,QAEb,IAAK,IAAIlC,EAAI,EAAGA,GAAKD,EAAMG,OAAS,EAAGF,IACnCC,aAAa6B,QAAb,UAAwB/B,EAAMC,GAAGS,IAC7BL,KAAK2B,UAAU,CAAChC,EAAMC,GAAGS,GACrBV,EAAMC,GAAGU,SACTX,EAAMC,GAAGW,YACTZ,EAAMC,GAAGY,gBAKZuB,EAAuB,SAACpC,EAAO6B,EAAQQ,GAEhD,IAAK,IAAIpC,EAAI,EAAGA,GAAKC,aAAaC,OAAQF,IAAI,CAC1C,IAAMG,EAAeC,KAAKC,MAAMJ,aAAaK,QAAQC,OAAOP,KACzDG,EAAa,KAAOyB,EAAOK,UACH,IAApB9B,EAAa,GACZF,aAAa6B,QAAb,UAAwB3B,EAAa,IACjCC,KAAK2B,UACD,CAAC5B,EAAa,GACVA,EAAa,IACb,EACAA,EAAa,OAEC,IAApBA,EAAa,IACnBF,aAAa6B,QAAb,UAAwB3B,EAAa,IACjCC,KAAK2B,UACD,CAAC5B,EAAa,GACVA,EAAa,IACb,EACAA,EAAa,OAKrC,IAAK,IAAIH,EAAI,EAAGA,GAAKoC,EAAMC,MAAMnC,OAAS,EAAGF,IACtCD,EAAMC,GAAGS,KAAOmB,EAAOK,SACtBlC,EAAMC,GAAGW,aACsB,IAAzBZ,EAAMC,GAAGW,cChGrB2B,EAAS,iBACTC,EAAQ,gBACRC,EAAW,mBACXC,EAAa,qBACbC,EAAkB,0BAGlBC,EAAe,CACjBN,MAAO,IAoEIO,EAjEK,WAAmC,IAAlCR,EAAiC,uDAAzBO,EAAcf,EAAW,uCAClD,OAAQA,EAAOiB,MACX,KAAKP,EAED,IAAMQ,EAAgB,GAGtB,OAFAhD,EAAyBgD,GAElB,2BAEAV,GAFP,IAGIC,MAAOS,IAGf,KAAKP,EAED,IAAMV,EAAUhB,IAGVkC,EAAU,YAAOX,EAAMC,OAG7B,OAFAV,EAAyBoB,EAAYnB,EAAQC,GAEtC,2BAEAO,GAFP,IAGIC,MAAM,GAAD,mBAAMD,EAAMC,OAAZ,CAAmB,CAAC5B,GAAIsC,EAAW7C,OAAS,EAC7CQ,SAAUkB,EAAOlB,SACjBC,aAAa,EACbC,YAAaiB,OAIzB,KAAKW,EACD,IAAIQ,EAAmB,GAGvB,OAFAhB,EAA2BgB,EAAkBpB,GAEtC,2BAEAQ,GAFP,IAGIC,MAAOW,IAGf,KAAKP,EAED,IAAIQ,EAAkB,YAAOb,EAAMC,OAGnC,OAFAF,EAAqBc,EAAoBrB,EAAQQ,GAE1C,2BAEAA,GAFP,IAGIC,MAAM,YAAKD,EAAMC,SAGzB,KAAKK,EAGD,OADAzC,aAAaiC,QACN,2BAEAE,GAFP,IAGIC,MAAO,KAEf,QACI,OAAOD,I,OC/BJc,EAvCF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAEXC,EAAWC,cAEXC,EAAiB,CAACC,IAAOC,SAAUC,IAAMD,UAE/C,OAEI,cADA,CACA,OAAKE,UAAWC,IAAGJ,IAAOK,SAAUH,IAAMG,SACZ,SAAVT,IAA0BD,EAAKxC,aAAe4C,EACrC,WAAVH,GAA2BD,EAAKxC,aAAe4C,GAFlE,UAII,sBAAKI,UAAWC,IAAGJ,IAAOL,KAAMO,IAAMP,KAAMA,EAAKxC,aAC7C6C,IAAOM,eADX,UAEI,mBAAGH,UAAWH,IAAOO,SAArB,SAAgCZ,EAAKvC,cACrC,mBAAG+C,UAAWH,IAAOQ,UAArB,SAAiCb,EAAKzC,cAI1C,sBAAKiD,UAAWC,IAAGJ,IAAOS,aAAcP,IAAMO,cAA9C,UACI,wBAAQN,UAAWC,IAAGJ,IAAOU,OAAQR,IAAMQ,OAAQf,EAAKxC,aACpD6C,IAAOW,cACHC,QAAS,WDiEL,IAACnC,ECjEYoB,GDiEZpB,ECjEkCkB,EAAK1C,GDkE9D,CAAEoC,KAAMJ,EAAeR,aCpEb,SAGKkB,EAAKxC,YACA,cAAC,IAAD,IACA,cAAC,IAAD,MAEV,wBAAQgD,UAAWC,IAAGJ,IAAOU,OAAQR,IAAMQ,QACnCE,QAAU,WDwDR,IAACnC,ECvDCoB,GDuDDpB,ECvDqBkB,EAAK1C,GDwD/C,CAAEoC,KAAML,EAAaP,aC1DX,SAII,cAAC,IAAD,a,kDCmBLoC,EAnDI,WAEf,IAAMhB,EAAWC,cAEXgB,EAAmBC,MAAaC,MAAM,CACxC9D,SAAU6D,MAELE,SAFK,uBAGLC,IAAI,IAHC,+BAMd,OACI,8BACI,cAAC,IAAD,CACIC,cAAe,CACXjE,SAAU,IAEdkE,gBAAc,EACdC,SAAa,SAACC,EAAD,GAAyB,IFgE9BpE,EEhEeqE,EAAc,EAAdA,UACnB1B,GF+DI3C,EE/DaoE,EAAOpE,SFgEtC,CAAEmC,KAAMN,EAAU7B,cE/DJqE,EAAU,CAACD,OAAO,MAEtBR,iBAAkBA,EATtB,SAWM,gBAAGQ,EAAH,EAAGA,OAAQE,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,WAAYC,EAAtD,EAAsDA,aACrDC,EADD,EACCA,QAASC,EADV,EACUA,MADV,OAEE,sBAAK3B,UAAWC,IAAGJ,IAAO+B,KAAM7B,IAAM6B,MAAtC,UACKN,EAAQvE,UAAYsE,EAAOtE,UAC5B,qBAAKiD,UAAWC,IAAGJ,IAAOgC,UAAW9B,IAAM8B,WAA3C,SAAwDR,EAAOtE,WAC/D,uBACIiD,UAAWC,IAAGJ,IAAOiC,MAAO/B,IAAM+B,OAClC5C,KAAO,OACP6C,KAAO,WACPC,SAAUT,EACVU,OAAQT,EACRU,MAAOf,EAAOpE,SACdoF,YAAY,uBAIhB,wBAAQnC,UAAWC,IAAGJ,IAAOU,OAAQR,IAAMQ,QACnC6B,UAAWV,IAAYC,EACvBlB,QAASgB,EACTvC,KAAM,SAHd,0B,gCC2CTmD,EAnFE,WAEb,IAAM3D,EAAQ4D,aAAY,SAAA7D,GAAK,OAAIA,EAAM8D,KAAK7D,SACxCgB,EAAWC,cAEjB6C,qBAAU,WACN9C,EH0EF,CAAER,KAAMP,MGzER,CAACe,IAGH,MAA4C+C,oBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAIMC,EAAc,WAChBD,GAAkB,IAItB,EAAoCF,mBAAS,OAA7C,mBAAOhD,EAAP,KAAmBoD,EAAnB,KAeI,OAAO,sBAAK7C,UAAWC,IAAGJ,IAAOiD,SAAU/C,IAAM+C,UAA1C,UACH,oBAAI9C,UAAWC,IAAGJ,IAAOkD,MAAOhD,IAAMgD,OAAtC,6BACA,cAAC,EAAD,IAIIrE,EAAMnC,OAAS,IAAMmG,GACrB,wBAAQ1C,UAAWC,IAAGJ,IAAOmD,aAAcjD,IAAMiD,cACzCvC,QA/BA,WAChBkC,GAAkB,IA6BV,qBAMAjE,EAAMnC,OAAS,GAAKmG,GACpB,sBAAK1C,UAAWC,IAAGJ,IAAOoD,QAASlD,IAAMkD,SAAzC,UACI,wBAAQjD,UAAWC,IAAGJ,IAAOqD,OAAQnD,IAAMmD,QACnCzC,QA9BJ,WAChBoC,EAAc,OACdD,KA2BY,iBAEA,wBAAQ5C,UAAWC,IAAGJ,IAAOqD,OAAQnD,IAAMmD,QACnCzC,QA5BH,WACjBoC,EAAc,QACdD,KAyBY,kBAEA,wBAAQ5C,UAAWC,IAAGJ,IAAOqD,OAAQnD,IAAMmD,QACnCzC,QA1BD,WACnBoC,EAAc,UACdD,KAuBY,uBAOa,IAAjBlE,EAAMnC,OACA,oBAAIyD,UAAWC,IAAGJ,IAAOsD,aAAcpD,IAAMoD,cAA7C,+EAEA,qBAAKnD,UAAWC,IAAGJ,IAAOuD,UAAWrD,IAAMqD,WAA3C,SAEM1E,EAAM2E,KAAI,SAAAhH,GAAC,OAAI,cAAC,EAAD,CACMmD,KAAMnD,EACNoD,WAAYA,GAFPpD,EAAES,SAUxC4B,EAAMnC,OAAS,GACf,wBAAQyD,UAAWC,IAAGJ,IAAOyD,YAAavD,IAAMuD,aACxC7C,QAAU,WAAOf,EHenC,CAAER,KAAMH,KGhBE,8BC7EDwE,EAJH,WACV,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCJRQ,EAAWC,YAAgB,CAC7B3B,KAAMtD,IAMKkF,EAFDC,YAAYH,GCA1BI,IAASC,OACL,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,EAAD,MACSI,SAASC,eAAe,SAGzChB,K,mBCbAvH,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,4BAA4B,UAAY,iC,mBCAvID,EAAOC,QAAU,CAAC,KAAO,+BAA+B,MAAQ,gCAAgC,OAAS,iCAAiC,UAAY,sC,kBCAtJD,EAAOC,QAAU,CAAC,SAAW,uBAAuB,KAAO,mBAAmB,SAAW,uBAAuB,UAAY,wBAAwB,cAAgB,4BAA4B,aAAe,2BAA2B,OAAS,qBAAqB,aAAe,2BAA2B,SAAW,uBAAuB,WAAa,2B,kBCAjWD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,cAAgB,gCAAgC,aAAe,+BAA+B,QAAU,0BAA0B,OAAS,yBAAyB,aAAe,+BAA+B,UAAY,4BAA4B,YAAc,gC,kBCAhWD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,MAAQ,6BAA6B,UAAY,iCAAiC,aAAe,oCAAoC,QAAU,+BAA+B,OAAS,8BAA8B,aAAe,oCAAoC,YAAc,qC","file":"static/js/main.2b809ea5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemBody\":\"itemMedia_itemBody__5OHzf\",\"item\":\"itemMedia_item__pRRvy\",\"buttonHolder\":\"itemMedia_buttonHolder__2v8xo\",\"button\":\"itemMedia_button__39uSv\",\"itemDone\":\"itemMedia_itemDone__22HK5\",\"itemUndone\":\"itemMedia_itemUndone__1b3y6\"};","export let getItemsFromLocalStorage = (array) => {\r\n    for (let i = 1; i <= localStorage.length; i++) {\r\n        const resultString = JSON.parse(localStorage.getItem(String(i)))\r\n        array.push(\r\n            {\r\n                id: resultString[0],\r\n                itemText: resultString[1],\r\n                isCompleted: resultString[2],\r\n                currentDate: resultString[3]\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const getNewDate = () => {\r\n    //Getting date when item was added\r\n    const months = [`Jan`, `Feb`, `Mar`, `Apr`, `May`, `Jun`, `Jul`, `Aug`, `Sep`, `Oct`, `Nov`, `Dec`]\r\n    const days = [`Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat`, `Sun`]\r\n    const now = new Date()\r\n\r\n    //Formatting date\r\n    const formatDate = (date) => {\r\n        if (String(date).length <= 1) return `0${String(date)}`\r\n        return String(date)\r\n    }\r\n    const currentHours = formatDate(now.getHours())\r\n    const currentMinutes = formatDate(now.getMinutes())\r\n    const currentSeconds = formatDate(now.getSeconds())\r\n\r\n    //Setting date\r\n    const newDate = `${now.getFullYear()} / ${months[now.getMonth()]} / ${days[now.getDay() - 1]} \r\n            / ${currentHours}:${currentMinutes}:${currentSeconds}`\r\n\r\n    return newDate\r\n\r\n}\r\n\r\n\r\nexport const addNewItemToLocalStorage = (array, action, newDate) => {\r\n    //Setting new item to localStorage\r\n    localStorage.setItem(`${array.length + 1}`,\r\n        JSON.stringify(\r\n            [array.length + 1,\r\n                action.itemText,\r\n                false,\r\n                newDate])\r\n    )\r\n}\r\n\r\n\r\nexport const deleteItemFromLocalStorage = (array, action) => {\r\n    //Getting items from localStorage\r\n    for (let i = 1; i <= localStorage.length; i++) {\r\n        const resultString = JSON.parse(localStorage.getItem(String(i)))\r\n        if (resultString[0] !== action.itemId) {\r\n            array.push({\r\n                id: array.length + 1,\r\n                itemText: resultString[1],\r\n                isCompleted: resultString[2],\r\n                currentDate: resultString[3]\r\n            })\r\n        }\r\n    }\r\n    //Clearing localStorage\r\n    localStorage.clear()\r\n    //Setting items again (this is needed for correct items id)\r\n    for (let i = 0; i <= array.length - 1; i++) {\r\n        localStorage.setItem(`${array[i].id}`,\r\n            JSON.stringify([array[i].id,\r\n                array[i].itemText,\r\n                array[i].isCompleted,\r\n                array[i].currentDate]))\r\n    }\r\n}\r\n\r\n\r\nexport const completeSelectedItem = (array, action, state) => {\r\n    //Getting items from localStorage and rewriting them with conditions\r\n    for (let i = 1; i <= localStorage.length; i++){\r\n        const resultString = JSON.parse(localStorage.getItem(String(i)))\r\n        if(resultString[0] === action.itemId){\r\n            if(resultString[2] === false){\r\n                localStorage.setItem(`${resultString[0]}`,\r\n                    JSON.stringify(\r\n                        [resultString[0],\r\n                            resultString[1],\r\n                            true,\r\n                            resultString[3]])\r\n                )\r\n            } else if(resultString[2] === true){\r\n                localStorage.setItem(`${resultString[0]}`,\r\n                    JSON.stringify(\r\n                        [resultString[0],\r\n                            resultString[1],\r\n                            false,\r\n                            resultString[3]])\r\n                )\r\n            }\r\n        }\r\n    }\r\n    for (let i = 0; i <= state.items.length - 1; i++) {\r\n        if(array[i].id === action.itemId){\r\n            array[i].isCompleted = true\r\n                ? array[i].isCompleted === false\r\n                : array[i].isCompleted === true\r\n        }\r\n    }\r\n}","import {\r\n    addNewItemToLocalStorage,\r\n    completeSelectedItem,\r\n    deleteItemFromLocalStorage,\r\n    getItemsFromLocalStorage,\r\n    getNewDate\r\n} from \"../helpers/localStorageHelpers\";\r\n\r\nconst GET_ITEMS = `todo/GET_ITEMS`\r\nconst ADD_ITEM = `todo/ADD_ITEM`\r\nconst DELETE_ITEM = `todo/DELETE_ITEM`\r\nconst COMPLETE_ITEM = `todo/COMPLETE_ITEM`\r\nconst COMPLETE_ALL_ITEMS = `todo/COMPLETE_ALL_ITEMS`\r\n\r\n\r\nconst initialState = {\r\n    items: [],\r\n}\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ITEMS:\r\n            //Getting items from localStorage\r\n            const newItemsArray = []\r\n            getItemsFromLocalStorage(newItemsArray)\r\n\r\n            return {\r\n                //Setting items to UI\r\n                ...state,\r\n                items: newItemsArray,\r\n            }\r\n\r\n        case ADD_ITEM:\r\n            //Getting date when item was added\r\n            const newDate = getNewDate()\r\n\r\n            //Adding item to localStorage\r\n            const itemsArray = [...state.items]\r\n            addNewItemToLocalStorage(itemsArray, action, newDate)\r\n\r\n            return {\r\n                //Setting items to UI\r\n                ...state,\r\n                items: [...state.items, {id: itemsArray.length + 1,\r\n                    itemText: action.itemText,\r\n                    isCompleted :false,\r\n                    currentDate: newDate\r\n                }],\r\n            }\r\n\r\n        case DELETE_ITEM:\r\n            let itemsDeleteArray = []\r\n            deleteItemFromLocalStorage(itemsDeleteArray, action)\r\n\r\n            return {\r\n                //Setting items to UI\r\n                ...state,\r\n                items: itemsDeleteArray,\r\n            }\r\n\r\n        case COMPLETE_ITEM:\r\n            //Getting items from localStorage and rewriting them with conditions\r\n            let itemsCompleteArray = [...state.items]\r\n            completeSelectedItem(itemsCompleteArray, action, state)\r\n\r\n            return {\r\n                //Setting items to UI\r\n                ...state,\r\n                items: [...state.items]\r\n            }\r\n\r\n        case COMPLETE_ALL_ITEMS:\r\n            //Clearing localStorage\r\n            localStorage.clear()\r\n            return {\r\n                //Setting items to UI\r\n                ...state,\r\n                items: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todoReducer\r\n\r\n\r\n//Action creators\r\nexport const getItems = () =>\r\n    ( { type: GET_ITEMS } )\r\n\r\nexport const addItem = (itemText) =>\r\n    ( { type: ADD_ITEM, itemText} )\r\n\r\nexport const deleteItem = (itemId) =>\r\n    ( { type: DELETE_ITEM, itemId } )\r\n\r\nexport const completeItem = (itemId) =>\r\n    ( { type: COMPLETE_ITEM, itemId } )\r\n\r\nexport const completeAllItem = () =>\r\n    ( { type: COMPLETE_ALL_ITEMS } )\r\n\r\n","import React from \"react\";\r\nimport styles from './item.module.css'\r\nimport media from './itemMedia.module.css'\r\nimport cn from 'classnames'\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { AiOutlineCheck } from 'react-icons/ai';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {completeItem, deleteItem} from \"../../../redux/todoReducer\";\r\n\r\nconst Item = ({item, filterType}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const arrayForFilter = [styles.itemDone, media.itemDone]\r\n\r\n    return (\r\n        // Filters show chosen elements with adding/deleting needed css style\r\n        <div className={cn(styles.itemBody, media.itemBody,\r\n                            filterType === `done` && !item.isCompleted && arrayForFilter,\r\n                           filterType === `undone` && item.isCompleted && arrayForFilter)\r\n        }>\r\n            <div className={cn(styles.item, media.item, item.isCompleted &&\r\n                styles.itemCompleted)}>\r\n                <p className={styles.itemTime}>{item.currentDate}</p>\r\n                <p className={styles.itemInner}>{item.itemText}</p>\r\n            </div>\r\n\r\n\r\n            <div className={cn(styles.buttonHolder, media.buttonHolder)}>\r\n                <button className={cn(styles.button, media.button, item.isCompleted &&\r\n                    styles.buttonCancel)}\r\n                        onClick={() => { dispatch(completeItem(item.id)) }}>\r\n                    {item.isCompleted\r\n                        ? <AiOutlineClose/>\r\n                        : <AiOutlineCheck/>}\r\n                </button>\r\n                <button className={cn(styles.button, media.button)}\r\n                        onClick={ () => {\r\n                            dispatch(deleteItem(item.id))\r\n                        }}>\r\n                    <AiFillDelete/>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport styles from './addItemForm.module.css'\r\nimport media from './addItemFormMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {Formik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addItem} from \"../../../redux/todoReducer\";\r\n\r\nconst AddNewItem = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validationSchema = yup.object().shape({\r\n        itemText: yup\r\n            .string()\r\n            .required(`Goal can't be empty`)\r\n            .max(300, `Max length is 300 symbols`)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    itemText: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit = { (values, {resetForm}) =>{\r\n                    dispatch(addItem(values.itemText))\r\n                    resetForm({values: ``})\r\n                } }\r\n                validationSchema={validationSchema}\r\n            >\r\n                { ({ values, errors, touched, handleChange, handleBlur, handleSubmit,\r\n                   isValid, dirty}) => (\r\n                    <div className={cn(styles.form, media.form)}>\r\n                        {touched.itemText && errors.itemText &&\r\n                        <div className={cn(styles.errorArea, media.errorArea)}>{errors.itemText}</div>}\r\n                        <input\r\n                            className={cn(styles.input, media.input)}\r\n                            type = 'text'\r\n                            name = 'itemText'\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.itemText}\r\n                            placeholder='Add a goal here...'/>\r\n\r\n\r\n\r\n                        <button className={cn(styles.button, media.button)}\r\n                                disabled={!isValid && !dirty}\r\n                                onClick={handleSubmit}\r\n                                type={'submit'}>Add</button>\r\n                    </div>\r\n                ) }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewItem","import React, {useEffect, useState} from \"react\";\r\nimport Item from \"./item/Item\";\r\nimport AddNewItem from \"./addItemForm/addItemForm\";\r\nimport styles from './todoList.module.css'\r\nimport media from './todoListMedia.module.css'\r\nimport cn from 'classnames'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {completeAllItem, getItems} from \"../../redux/todoReducer\";\r\n\r\nconst TodoList = () => {\r\n\r\n    const items = useSelector(state => state.todo.items)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        dispatch(getItems())\r\n    },[dispatch])\r\n\r\n    //Setting visibility of filters button\r\n    const [filtersVisible, setFiltersVisible] = useState(false)\r\n    const showFilters = () => {\r\n        setFiltersVisible(true)\r\n    }\r\n    const hideFilters = () => {\r\n        setFiltersVisible(false)\r\n    }\r\n\r\n    //Setting filter type for items\r\n    const [filterType, setFilterType] = useState(`all`)\r\n    const seeAllItems = () => {\r\n        setFilterType(`all`)\r\n        hideFilters()\r\n    }\r\n    const seeDoneItems = () => {\r\n        setFilterType(`done`)\r\n        hideFilters()\r\n    }\r\n    const seeUndoneItems = () => {\r\n        setFilterType(`undone`)\r\n        hideFilters()\r\n    }\r\n\r\n\r\n        return <div className={cn(styles.todoBody, media.todoBody)}>\r\n            <h2 className={cn(styles.title, media.title)}>Plan for today:</h2>\r\n            <AddNewItem/>\r\n\r\n            {/*Button shows only when filtersVisible = false and items array exists*/}\r\n            {\r\n                items.length > 0 && !filtersVisible &&\r\n                <button className={cn(styles.filterButton, media.filterButton)}\r\n                        onClick={showFilters}>Filters</button>\r\n            }\r\n\r\n            {/*Filters show only when filtersVisible = true and items array exists*/}\r\n            {\r\n                items.length > 0 && filtersVisible &&\r\n                <div className={cn(styles.filters, media.filters)}>\r\n                    <button className={cn(styles.filter, media.filter)}\r\n                            onClick={seeAllItems} >All</button>\r\n                    <button className={cn(styles.filter, media.filter)}\r\n                            onClick={seeDoneItems} >Done</button>\r\n                    <button className={cn(styles.filter, media.filter)}\r\n                            onClick={seeUndoneItems} >Undone</button>\r\n                </div>\r\n            }\r\n\r\n            {/*Items array shows only when exists*/}\r\n            {\r\n                items.length === 0\r\n                    ? <h3 className={cn(styles.itemsReplace, media.itemsReplace)}>Add your daily goals here to\r\n                        be shure you won't forget something </h3>\r\n                    : <div className={cn(styles.itemsList, media.itemsList)}>\r\n                        {\r\n                            items.map(i => <Item key={i.id}\r\n                                                 item={i}\r\n                                                 filterType={filterType}/>)\r\n                        }\r\n                    </div>\r\n            }\r\n\r\n\r\n            {/*CompleteAll button show only items array exists*/}\r\n            {\r\n                items.length > 0 &&\r\n                <button className={cn(styles.completeAll, media.completeAll)}\r\n                        onClick={ () => {dispatch(completeAllItem())} }>Complete all</button>\r\n            }\r\n\r\n        </div>\r\n}\r\n\r\nexport default TodoList","import './App.css';\r\nimport React from \"react\";\r\nimport TodoList from \"./components/todoList/todoList\";\r\n\r\nconst App = () => {\r\n  return <TodoList />\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    todo: todoReducer,\r\n})\r\n\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"addItemForm_form__2EbeK\",\"input\":\"addItemForm_input__ppM32\",\"button\":\"addItemForm_button__1zjJS\",\"errorArea\":\"addItemForm_errorArea__2tovt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"addItemFormMedia_form__J0tmR\",\"input\":\"addItemFormMedia_input__2RD8A\",\"button\":\"addItemFormMedia_button__2SY3o\",\"errorArea\":\"addItemFormMedia_errorArea__1_0i7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemBody\":\"item_itemBody__3hAFk\",\"item\":\"item_item__sF3xA\",\"itemTime\":\"item_itemTime__1WokY\",\"itemInner\":\"item_itemInner__2IM2e\",\"itemCompleted\":\"item_itemCompleted__1aJiA\",\"buttonHolder\":\"item_buttonHolder__2nkg4\",\"button\":\"item_button__12YzU\",\"buttonCancel\":\"item_buttonCancel__3UmXS\",\"itemDone\":\"item_itemDone__2S202\",\"itemUndone\":\"item_itemUndone__1tw0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoBody\":\"todoList_todoBody__29Unn\",\"title\":\"todoList_title__1_WnU\",\"filterSection\":\"todoList_filterSection__s-Kul\",\"filterButton\":\"todoList_filterButton__hX1hT\",\"filters\":\"todoList_filters__2JSGU\",\"filter\":\"todoList_filter__ygjB4\",\"itemsReplace\":\"todoList_itemsReplace__1S0WE\",\"itemsList\":\"todoList_itemsList__2skke\",\"completeAll\":\"todoList_completeAll__2mIuY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoBody\":\"todoListMedia_todoBody__2kfpW\",\"title\":\"todoListMedia_title__2Q3Vw\",\"itemsList\":\"todoListMedia_itemsList__28lba\",\"filterButton\":\"todoListMedia_filterButton__2yOXb\",\"filters\":\"todoListMedia_filters__ULwMc\",\"filter\":\"todoListMedia_filter__27JlI\",\"itemsReplace\":\"todoListMedia_itemsReplace__1HroB\",\"completeAll\":\"todoListMedia_completeAll__3Tdkf\"};"],"sourceRoot":""}